import React from 'react';import s from './Dialogs.module.css';import DialogItem from "./DialogItem/DialogItem";import Message from "./Message/Message";import {reduxForm, Field} from "redux-form";import {Textarea} from "../../../assets/common/FormsControls/FormsControls";import {maxLengthCreator, required} from "../../../utilities/validators/Validators";import {InitialStateType} from "../../../Redux/dialogs-reducer";type StatePropsType = {    dialogsPage: InitialStateType    sendMessage: (newMessageBody: string) => void    updateNewMessageBody: (text: string) => void    isAuth: boolean};type NewMessageBodyType = {    newMessageBody: string}const Dialogs: React.FC<StatePropsType> = (props) => {    // let state = props.dialogsPage;    let dialogsElements = props.dialogsPage.dialogs.map(d => <DialogItem key={d.id} name={d.name} id={d.id}/>);    let messagesElements = props.dialogsPage.messages.map(m => <Message key={m.id} message={m.message} />);    const addNewMessage = (values: NewMessageBodyType) => {        props.sendMessage(values.newMessageBody);    }    return (        <div className={s.dialogs}>            <div className={s.dialogsItems}>                {dialogsElements}            </div>            <div className="messages">                <div>{messagesElements}</div>            </div>            <AddMessageFormRedux onSubmit={addNewMessage}/>        </div>    )}const maxLength50 = maxLengthCreator(50)export const AddMessageForm = (props: any) => {    return (        <form onSubmit={props.handleSubmit}>            <div>                <Field component={Textarea}                       validate={[required,maxLength50]}                       name="newMessageBody"                       placeholder="Enter your message"/>            </div>            <div>                <button >Send</button>            </div>        </form>    )}const AddMessageFormRedux = reduxForm<NewMessageBodyType>({form: "dialogAddMessageForm"})(AddMessageForm)export default Dialogs;