import React from 'react';import { DialogsStateType, sendMessageCreator, updateNewMessageBodyCreator} from "../../Redux/dialogs-reducer";import Dialogs from "./Dialogs";import {connect} from "react-redux";import {RootStateRedux} from "../../Redux/redux-store";import {Dispatch} from "redux";type MapStateToPropsType = {    dialogsPage: DialogsStateType    isAuth: boolean}type MapDispatchToPropsType = {    sendMessage: () => void    updateNewMessageBody: (body: string) => void}export type sendMessageActionCreatorType = {    sendMessageCreator: (type: "SEND_MESSAGE") => void}export type updateNewMessageBodyCreatorType = {    updateNewMessageBodyCreator: (type: "UPDATE_NEW_MESSAGE_BODY", body: string) => void}export type DispatchPropsType = sendMessageActionCreatorType | updateNewMessageBodyCreatorType   let mapStateToProps = (state: RootStateRedux) => {    return {        dialogsPage: state.dialogsPage,        isAuth: state.auth.isAuth    } }   let mapDispatchToProps = (dispatch: Dispatch): MapDispatchToPropsType => {    return {        sendMessage: () => {            dispatch(sendMessageCreator());        },        updateNewMessageBody: (body: string) => {            dispatch(updateNewMessageBodyCreator(body));        }    }}const DialogsContainer = connect<MapStateToPropsType, MapDispatchToPropsType, {}, RootStateRedux>(mapStateToProps, mapDispatchToProps)(Dialogs);export default DialogsContainer;