{"version":3,"sources":["pages/Chat/ChatPage.module.css","pages/Chat/ChatPage.tsx"],"names":["module","exports","Chat","useState","wsChannel","setWsChannel","useEffect","ws","closeHandler","console","log","setTimeout","createChannel","removeEventListener","close","WebSocket","addEventListener","Messages","AddMessageForm","messages","setMessages","messageHandler","e","newMessages","JSON","parse","data","prevMessages","style","height","overflowY","map","m","index","Message","message","src","photo","width","userName","setMessage","readyStatus","setReadyStatus","openHandler","value","onChange","currentTarget","className","s","btn","disabled","onClick","send","ChatPage"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,IAAM,wB,mQCkBXC,EAAiB,WAAO,IAAD,EAEEC,mBAA2B,MAF7B,mBAEzBC,EAFyB,KAEdC,EAFc,KAoChC,OAhCAC,qBAAU,WACN,IAAIC,EACEC,EAAe,WACjBC,QAAQC,IAAI,YACZC,WAAWC,EAAe,MAG9B,SAASA,IAAiB,IAAD,IAEnB,QAAF,EAAAL,SAAA,SAAIM,oBAAoB,QAASL,GAC/B,QAAF,EAAAD,SAAA,SAAIO,SAEJP,EAAK,IAAIQ,UAAU,mEAChBC,iBAAiB,QAASR,GAC7BH,EAAaE,GAKjB,OAFAK,IAEO,WACHL,EAAGM,oBAAoB,QAASL,GAChCD,EAAGO,WAGR,IAEHR,qBAAU,WACG,OAATF,QAAS,IAATA,KAAWY,iBAAiB,SAAS,WACjCP,QAAQC,IAAI,iBAEjB,CAACN,IAEG,gCACH,cAACa,EAAD,CAAUb,UAAWA,IACrB,cAACc,EAAD,CAAgBd,UAAWA,QAItBa,EAAsD,SAAC,GAAiB,IAAhBb,EAAe,EAAfA,UAAe,EAChDD,mBAA4B,IADoB,mBACzEgB,EADyE,KAC/DC,EAD+D,KAiBhF,OAdAd,qBAAU,WACN,IAAIe,EAAiB,SAACC,GAClB,IAAIC,EAAcC,KAAKC,MAAMH,EAAEI,MAC/BN,GAAY,SAACO,GAAD,4BAAsBA,GAAtB,YAAuCJ,QAKvD,OAHS,OAATnB,QAAS,IAATA,KAAWY,iBAAiB,UAAWK,GAGhC,WACM,OAATjB,QAAS,IAATA,KAAWS,oBAAoB,UAAUQ,MAE9C,CAACjB,IAGG,qBAAKwB,MAAO,CAACC,OAAQ,QAASC,UAAW,QAAzC,SACFX,EAASY,KAAI,SAACC,EAAQC,GAAT,OAAmB,cAACC,EAAD,CAASC,QAASH,GAAQC,SAItDC,EAAkD,SAAC,GAAe,IAAdC,EAAa,EAAbA,QAG7D,OAAO,gCACH,qBAAKC,IAAKD,EAAQE,MAAOT,MAAO,CAACU,MAAO,UAAU,4BAAIH,EAAQI,WAC9D,uBACCJ,EAAQA,QACT,2BAIKjB,EAA4D,SAAC,GAAiB,IAAhBd,EAAe,EAAfA,UAAe,EACxDD,mBAAS,IAD+C,mBAC/EgC,EAD+E,KACtEK,EADsE,OAEhDrC,mBAA8B,WAFkB,mBAE/EsC,EAF+E,KAElEC,EAFkE,KAItFpC,qBAAU,WACN,IAAIqC,EAAc,WACdD,EAAe,UAInB,OAFS,OAATtC,QAAS,IAATA,KAAWY,iBAAiB,OAAQ2B,GAE7B,WACM,OAATvC,QAAS,IAATA,KAAWS,oBAAoB,OAAQ8B,MAE5C,CAACvC,IAWJ,OAAO,gCACH,8BACI,0BAAUwC,MAAOT,EACPU,SAAU,SAACvB,GAAD,OAAOkB,EAAWlB,EAAEwB,cAAcF,YAE1D,8BACI,wBAAQG,UAAWC,IAAEC,IAAKC,SAAwB,OAAd9C,GAAsC,UAAhBqC,EAAyBU,QAfvE,WACXhB,IAGI,OAAT/B,QAAS,IAATA,KAAWgD,KAAKjB,GAChBK,EAAW,MAUP,wBAMGa,UAvHE,WACb,OACI,8BACI,cAACnD,EAAD","file":"static/js/6.fa8d807d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"ChatPage_btn__h227e\"};","import { Button } from 'antd';\r\nimport React, {useEffect, useState} from 'react';\r\nimport s from \"./ChatPage.module.css\"\r\n\r\nexport type ChatMessageType = {\r\n    message: string\r\n    photo: string\r\n    userId: number\r\n    userName: string\r\n}\r\n\r\nconst ChatPage = () => {\r\n    return (\r\n        <div>\r\n            <Chat/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const Chat: React.FC = () => {\r\n\r\n    const [wsChannel, setWsChannel] = useState<WebSocket | null>(null)\r\n\r\n    useEffect(() => {\r\n        let ws: WebSocket\r\n        const closeHandler = () => {\r\n            console.log(\"CLOSE WS\")\r\n            setTimeout(createChannel, 3000)\r\n        }\r\n\r\n        function createChannel() {\r\n\r\n            ws?.removeEventListener('close', closeHandler)\r\n            ws?.close()\r\n\r\n            ws = new WebSocket(\"wss://social-network.samuraijs.com/handlers/ChatHandler.ashx\\n\")\r\n            ws.addEventListener('close', closeHandler)\r\n            setWsChannel(ws)\r\n        }\r\n\r\n        createChannel()\r\n\r\n        return () => {\r\n            ws.removeEventListener('close', closeHandler)\r\n            ws.close()\r\n        }\r\n\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        wsChannel?.addEventListener('close', () => {\r\n            console.log(\"CLOSE WS\")\r\n        })\r\n    }, [wsChannel])\r\n\r\n    return <div>\r\n        <Messages wsChannel={wsChannel}/>\r\n        <AddMessageForm wsChannel={wsChannel}/>\r\n    </div>\r\n}\r\n\r\nexport const Messages: React.FC<{ wsChannel: WebSocket | null }> = ({wsChannel}) => {\r\n    const [messages, setMessages] = useState<ChatMessageType[]>([])\r\n\r\n    useEffect(() => {\r\n        let messageHandler = (e: MessageEvent) => {\r\n            let newMessages = JSON.parse(e.data);\r\n            setMessages((prevMessages) => [...prevMessages, ...newMessages])\r\n        };\r\n        wsChannel?.addEventListener(\"message\", messageHandler)\r\n\r\n\r\n        return () => {\r\n            wsChannel?.removeEventListener('message',messageHandler)\r\n        }\r\n    }, [wsChannel])\r\n\r\n\r\n    return <div style={{height: \"400px\", overflowY: \"auto\"}}>\r\n        {messages.map((m: any, index) => <Message message={m} key={index}/>)}\r\n    </div>\r\n}\r\n\r\nexport const Message: React.FC<{ message: ChatMessageType }> = ({message}) => {\r\n\r\n\r\n    return <div>\r\n        <img src={message.photo} style={{width: \"30px\"}}/><b>{message.userName}</b>\r\n        <br/>\r\n        {message.message}\r\n        <hr/>\r\n    </div>\r\n}\r\n\r\nexport const AddMessageForm: React.FC<{ wsChannel: WebSocket | null }> = ({wsChannel}) => {\r\n    const [message, setMessage] = useState(\"\")\r\n    const [readyStatus, setReadyStatus] = useState<'pending' | 'ready'>('pending')\r\n\r\n    useEffect(() => {\r\n        let openHandler = () => {\r\n            setReadyStatus(\"ready\")\r\n        }\r\n        wsChannel?.addEventListener('open', openHandler)\r\n\r\n        return () => {\r\n            wsChannel?.removeEventListener('open', openHandler)\r\n        }\r\n    }, [wsChannel])\r\n\r\n    const sendMessage = () => {\r\n        if (!message) {\r\n            return;\r\n        }\r\n        wsChannel?.send(message)\r\n        setMessage(\"\")\r\n    }\r\n\r\n\r\n    return <div>\r\n        <div>\r\n            <textarea value={message}\r\n                      onChange={(e) => setMessage(e.currentTarget.value)}></textarea>\r\n        </div>\r\n        <div>\r\n            <button className={s.btn} disabled={wsChannel === null || readyStatus !== \"ready\"} onClick={sendMessage}>Send</button>\r\n        </div>\r\n    </div>\r\n}\r\n\r\n\r\nexport default ChatPage\r\n"],"sourceRoot":""}