{"version":3,"sources":["Navbar/Navbar.module.css","Redux/dialogs-reducer.ts","Users/Users.module.css","api/api.ts","reportWebVitals.js","Navbar/Navbar.tsx","Profile/News/News.tsx","Profile/Music/Music.tsx","Profile/Settings/Settings.tsx","utilities/object-helpers.ts","Redux/users-reducer.ts","assets/common/Paginator/Paginator.tsx","assets/images/390poHMbqew.jpg","Users/User.tsx","Users/Users.tsx","Redux/users-selectors.ts","Users/UsersContainer.tsx","Header/Header.tsx","Redux/auth-reducer.ts","Header/HeaderContainer.tsx","Login/Login.tsx","Login/LoginForm.tsx","Redux/app-reducer.ts","Redux/sidebar-reducer.ts","Redux/redux-store.ts","hoc/withSuspense.tsx","App.tsx","index.tsx","assets/common/FormsControls/FormsControls.tsx","assets/common/FormsControls/FormsControls.module.css","assets/images/Spin-1.4s-137px (1).svg","assets/common/Preloader.tsx","assets/common/Paginator/Paginator.module.css","utilities/validators/Validators.tsx","Header/Header.module.css","hoc/withAuthRedirect.tsx","Redux/profile-reducer.ts"],"names":["module","exports","SEND_MESSAGE","initialState","dialogs","id","name","messages","message","newMessageBody","sendMessageCreator","type","dialogsReducer","state","action","body","instance","axios","create","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getProfile","console","warn","profileAPI","getStatus","updateStatus","status","put","authAPI","me","login","email","password","rememberMe","logout","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Navbar","className","s","nav","item","to","activeClassName","activeLink","active","News","props","Music","Settings","updateObjectInArray","itemId","objPropName","newObjProps","map","u","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","users","totalUsersCount","isFetching","followingInProgress","followSuccess","usersId","unfollowSuccess","setUsers","setCurrentPage","setTotalUsersCount","count","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","resultCode","usersReducer","followed","filter","Paginator","totalItemsCount","onPageChanged","x","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","cn","styles","paginator","onClick","p","selectedPage","pageNumber","e","User","user","src","photos","small","userPhoto","disabled","some","fullName","Users","getUsersState","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","this","Preloader","React","Component","compose","withAuthRedirect","connect","bind","items","totalCount","Header","header","loginBlock","isAuth","SET_USER_DATA","setAuthUserData","payload","getAuthUserData","authReducer","HeaderContainer","auth","LoginReduxForm","reduxForm","form","handleSubmit","error","onSubmit","createField","required","Input","formSummaryError","length","stopSubmit","_error","formData","INITIALIZED_SUCCESS","initialized","appReducer","sidebarReducer","rootReducer","combineReducers","profilePage","profileReducer","dialogsPage","sidebar","formReducer","app","store","createStore","applyMiddleware","thunkMiddleware","window","withSuspense","WrappedComponent","Suspense","fallback","DialogsContainer","lazy","ProfileContainer","SuspendedDialogs","SuspendedProfile","AppContainer","withRouter","initializeApp","promise","Promise","all","useEffect","path","render","SamuraiJSApp","ReactDOM","document","getElementById","FormControl","meta","touched","children","hasError","formControl","Textarea","input","restProps","placeholder","validators","component","text","validate","style","backgroundColor","preloader","value","maxLengthCreator","maxLength","mapStateToPropsWithRedirect","ADD_POST","SET_USER_PROFILE","SET_STATUS","DELETE_POST","posts","likesCount","newPostText","profile","addPost","setStatus","getUserProfile","newPost","postId"],"mappings":"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","file":"static/js/main.1a8ca7c0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3SeaK\",\"item\":\"Navbar_item__1VkP1\",\"activeLink\":\"Navbar_activeLink__1NHh2\"};","//const UPDATE_NEW_MESSAGE_BODY = \"UPDATE_NEW_MESSAGE_BODY\";\r\nconst SEND_MESSAGE = \"SEND_MESSAGE\";\r\n\r\n\r\nexport type DialogsPropsType = {\r\n    id: number\r\n    name: string\r\n}\r\nexport type MessagesPropsType = {\r\n    id: number\r\n    message: string\r\n}\r\n\r\nexport type DialogsStateType = {\r\n    dialogs: Array<DialogsPropsType>\r\n    messages:  Array<MessagesPropsType>\r\n    newMessageBody: string\r\n}\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: \"Dimych\"},\r\n        {id: 2, name: \"Viktor\"},\r\n        {id: 3, name: \"Sveta\"},\r\n        {id: 4, name: \"Andrew\"},\r\n        {id: 5, name: \"Sasha\"},\r\n        {id: 6, name: \"Valera\"},\r\n    ],\r\n    messages: [\r\n        {id: 1, message: \"Hi\"},\r\n        {id: 2, message: \"How is your It-kamasutra? \"},\r\n        {id: 3, message: \"Yo\"},\r\n        {id: 4, message: \"Yo\"},\r\n        {id: 5, message: \"Yo\"}\r\n    ],\r\n    newMessageBody: \"\"\r\n}\r\n\r\nexport type sendMessageAC = {\r\n    type: \"SEND_MESSAGE\"\r\n    newMessageBody: any\r\n}\r\nexport type updateMessageAC = {\r\n    type: \"UPDATE_NEW_MESSAGE_BODY\"\r\n    body: string\r\n}\r\n\r\nexport type actionsMessageType = sendMessageAC | updateMessageAC\r\nconst dialogsReducer = (state: DialogsStateType = initialState, action: actionsMessageType): DialogsStateType => {\r\n\r\n    switch (action.type) {\r\n        // case UPDATE_NEW_MESSAGE_BODY:\r\n        //     return {...state, newMessageBody: action.body}\r\n        case SEND_MESSAGE:\r\n            let body = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n               // newMessageBody: \"\",\r\n                messages: [...state.messages,\r\n                    {id: 6, message: body}]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const sendMessageCreator = (newMessageBody:any) => ({type: SEND_MESSAGE, newMessageBody} as const)\r\n/*\r\nexport const updateNewMessageBodyCreator = (body: string) =>\r\n    ({type: UPDATE_NEW_MESSAGE_BODY, body: body} as const)\r\n*/\r\n\r\nexport default dialogsReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"Users_userPhoto__XybWM\",\"selectedPage\":\"Users_selectedPage__2bVJj\"};","import axios from \"axios\";\r\n\r\n\r\nexport const instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"e08e1901-cb67-4f8e-968d-12deec271219\"\r\n    }\r\n})\r\n\r\nexport const usersAPI = {\r\n    getUsers: (currentPage: number = 1, pageSize: number = 10) => {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    follow(userId: number) {\r\n      return instance.post(`follow/${userId}`)\r\n  },\r\n    unfollow(userId: number) {\r\n      return instance.delete(`follow/${userId}`)\r\n  },\r\n    getProfile(userId: number) {\r\n        console.warn('Obsolete method.Please profileAPI object.')\r\n       return  profileAPI.getProfile(userId)\r\n    }\r\n}\r\nexport const profileAPI = {\r\n    getProfile(userId: number) {\r\n        return  instance.get(`profile/` + userId)\r\n    },\r\n    getStatus(userId: number){\r\n        return  instance.get(`profile/status/` + userId)\r\n    },\r\n    updateStatus(status: string){\r\n        debugger\r\n        return  instance.put(`profile/status`, {status: status})\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`)\r\n    },\r\n    login(email: string,password: string,rememberMe:boolean = false) {\r\n        return instance.post(`auth/login`, {email,password,rememberMe})\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`)\r\n    },\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport  s from'./Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n /*let s = {\r\n     'nav': 'Navbar_nav__3Rdw3',\r\n     'item': 'Navbar__item__2k32d'\r\n } */\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n        <div className={s.item}>\r\n         <NavLink to=\"/profile\" activeClassName={s.activeLink}> Profile</NavLink>\r\n        </div>\r\n        <div className={`${s.item} ${s.active}`}>\r\n         <NavLink to=\"/dialogs\" activeClassName={s.activeLink} > Messages</NavLink>\r\n        </div>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to=\"/users\" activeClassName={s.activeLink} > Users</NavLink>\r\n            </div>\r\n        <div  className={`${s.item} ${s.active}`}>\r\n            <NavLink to=\"/news\" activeClassName={s.activeLink} > News</NavLink>\r\n        </div>\r\n        <div className={`${s.item} ${s.active}`}>\r\n            <NavLink to=\"/music\" activeClassName={s.activeLink} > Music</NavLink>\r\n        </div>\r\n        <div className={`${s.item} ${s.active}`}>\r\n            <NavLink to=\"/settings\" activeClassName={s.activeLink} > Settings</NavLink>\r\n        </div>\r\n      </nav>\r\n    );\r\n\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\rimport s from './News.module.css';\r\rtype NewsPropsType = {\r\r}\r\rconst News = (props: NewsPropsType) => {\r    return (\r        <div>\r        </div>\r\r    )\r}\r\rexport default News;","import React from 'react';\rimport s from './Music.module.css';\rconst Music = () => {\r    return (\r        <div>\r        </div>\r\r    )\r}\r\rexport default Music;","import React from 'react';\rimport s from './Settings.module.css';\r\rtype SettingsPropsType = {\r\r}\r\rconst Settings = (props: SettingsPropsType) => {\r    return (\r        <div>\r        </div>\r\r    )\r}\r\rexport default Settings;","export const updateObjectInArray = (item: any,itemId:any,objPropName:any,newObjProps:any) => {\r\n    return item.map((u:any) => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u\r\n    })\r\n}","import {UserType} from \"../types\";\r\nimport {usersAPI} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../utilities/object-helpers\";\r\n\r\nconst FOLLOW = 'FOLLOW'\r\nconst UNFOLLOW = 'UNFOLLOW'\r\nconst SET_USERS = 'SET_USERS'\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE'\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT'\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING'\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS'\r\n\r\nexport type FollowACType = {\r\n    type: 'FOLLOW'\r\n    usersId: number\r\n}\r\nexport type UnFollowACType = {\r\n    type: 'UNFOLLOW'\r\n    usersId: number\r\n}\r\nexport type SetUsersACType = {\r\n    type: 'SET_USERS'\r\n    users: UserType[]\r\n}\r\nexport type SetCurrentPageACType = {\r\n    type: 'SET_CURRENT_PAGE'\r\n    currentPage: number\r\n}\r\nexport type SetUsersTotalCountACType = {\r\n    type: 'SET_TOTAL_USERS_COUNT'\r\n    count: number\r\n}\r\nexport type toggleIsFetchingACType = {\r\n    type: 'TOGGLE_IS_FETCHING'\r\n    isFetching: boolean\r\n}\r\nexport type toggleFollowingProgressACType = {\r\n    type: 'TOGGLE_IS_FOLLOWING_PROGRESS'\r\n    isFetching: boolean\r\n    userId: number\r\n}\r\nexport type UsersACType = FollowACType | UnFollowACType |\r\n    SetUsersACType | SetCurrentPageACType |\r\n    SetUsersTotalCountACType | toggleIsFetchingACType | toggleFollowingProgressACType\r\n\r\nlet initialState = {\r\n    users: [ ] as UserType[],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: [] as Array<number>\r\n}\r\n\r\ntype InitialState = typeof initialState;\r\n\r\nconst usersReducer = (state = initialState, action: UsersACType): InitialState => {\r\n\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users,action.usersId,\"id\",{followed: true})\r\n                // users: state.users.map(u => {\r\n                //     if (u.id === action.usersId) {\r\n                //         return {...u, followed: true}\r\n                //     }\r\n                //     return u\r\n                // })\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users,action.usersId,\"id\",{followed: false})\r\n            }\r\n        case SET_USERS: {\r\n            return {...state, users: action.users}\r\n        }\r\n        case  SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case  SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalUsersCount: action.count}\r\n        }\r\n        case  TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case  \"TOGGLE_IS_FOLLOWING_PROGRESS\": {\r\n            return {...state, followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress,  action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const followSuccess = (usersId: number): FollowACType => ({type: FOLLOW, usersId})\r\nexport const unfollowSuccess = (usersId: number): UnFollowACType => ({type: UNFOLLOW, usersId})\r\nexport const setUsers = (users: Array<UserType>): SetUsersACType => ({type: SET_USERS, users})\r\nexport const setCurrentPage = (currentPage: number): SetCurrentPageACType => ({type: SET_CURRENT_PAGE, currentPage})\r\nexport const setTotalUsersCount = (totalUsersCount: number): SetUsersTotalCountACType => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount})\r\nexport const toggleIsFetching = (isFetching: boolean): toggleIsFetchingACType  => ({type: TOGGLE_IS_FETCHING, isFetching})\r\nexport const toggleFollowingProgress = (isFetching: boolean, userId: number): toggleFollowingProgressACType  => ({type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId})\r\n\r\n\r\n export const getUsers = (currentPage: number, pageSize:number) => {  //ThunkCreator\r\n              return async (dispatch: any) => {\r\n              dispatch(toggleIsFetching(true))\r\n              dispatch(setCurrentPage(currentPage))\r\n\r\n              let data = await usersAPI.getUsers(currentPage, pageSize);\r\n              dispatch(toggleIsFetching(false))\r\n              dispatch(setUsers(data.items))\r\n              dispatch(setTotalUsersCount(data.totalCount))\r\n      }\r\n}\r\n\r\nexport const followUnfollowFlow = async (dispatch: any,userId: number,apiMethod: any,actionCreator:any) => {\r\n    dispatch(toggleFollowingProgress(true, userId))\r\n    let response = await apiMethod(userId);\r\n\r\n    if(response.data.resultCode === 0) {\r\n        dispatch(actionCreator(userId))}\r\n    dispatch(toggleFollowingProgress(false, userId))\r\n}\r\n\r\nexport const follow = (userId: number) => {  //ThunkCreator\r\n        return async (dispatch: any) => {\r\n            followUnfollowFlow(dispatch,userId,usersAPI.follow.bind(usersAPI),followSuccess)\r\n           }\r\n}\r\n\r\nexport const unfollow = (userId: number) => {  //ThunkCreator\r\n        return async (dispatch: any) => {\r\n            followUnfollowFlow(dispatch,userId,usersAPI.unfollow.bind(usersAPI),unfollowSuccess)\r\n        }\r\n}\r\n\r\n\r\nexport default usersReducer;","import React, {useState} from \"react\";\r\nimport styles from \"./Paginator.module.css\";\r\nimport cn from \"classnames\";\r\n\r\ntype PropsType = {\r\n    totalItemsCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    onPageChanged: (p: number) => void\r\n    portionSize?: number\r\n}\r\n\r\nexport let Paginator: React.FC<PropsType> = ({totalItemsCount,pageSize,currentPage=1,onPageChanged = x => x,portionSize = 10}) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize)\r\n\r\n    let pages = []\r\n    for(let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize)\r\n    let [portionNumber,setPortionNumber] = useState(1)\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\r\n    let rightPortionPageNumber = portionNumber * portionSize\r\n\r\n    return <div className={cn(styles.paginator)}>\r\n        {portionNumber > 1 &&\r\n        <button onClick={() => {setPortionNumber(portionNumber - 1)}}>PREV</button>}\r\n\r\n        {pages\r\n            .filter(p => p >= leftPortionPageNumber && p<= rightPortionPageNumber)\r\n            .map((p) => {\r\n            return <span className={cn({[styles.selectedPage] : currentPage === p},styles.pageNumber)}\r\n                         key={p}\r\n                         onClick={ (e) => {onPageChanged(p) }}\r\n                         >{p}</span>\r\n    })}\r\n\r\n        {portionCount > portionNumber &&\r\n        <button onClick={() => {setPortionNumber(portionNumber + 1)}}>NEXT</button>\r\n        }\r\n\r\n\r\n    </div>\r\n}\r\n","export default __webpack_public_path__ + \"static/media/390poHMbqew.5605775c.jpg\";","import React from \"react\";\r\nimport styles from \"./Users.module.css\";\r\nimport userPhoto from \"../assets/images/390poHMbqew.jpg\";\r\nimport {NavLink} from \"react-router-dom\"\r\nimport {UserType} from \"../types\";\r\n\r\ntype UserPropsType = {\r\n    user: UserType\r\n    followingInProgress: number[]\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n}\r\n\r\nexport let User: React.FC<UserPropsType> = ({user,followingInProgress,unfollow,follow}) => {\r\n    return <div>\r\n        <span>\r\n             <div>\r\n                <NavLink to={'./profile/' + user.id}>\r\n                     <img src={user.photos.small != null ? user.photos.small : userPhoto} className={styles.userPhoto}/>\r\n                </NavLink>\r\n            </div>\r\n             <div>{user.followed\r\n                 ?  <button disabled={followingInProgress.some(id => id === user.id)}\r\n                            onClick={() => {unfollow( user.id) }}>Unfollow</button>\r\n                 : <button disabled={followingInProgress.some(id => id === user.id)}\r\n                           onClick={() => {follow(user.id) }}>Follow</button>}\r\n            </div>\r\n        </span>\r\n        <span>\r\n                <span>\r\n                    <div>{user.fullName}</div>\r\n                    <div>{user.status}</div>\r\n                </span>\r\n                <span>\r\n                    <div>{'user.location.country'}</div>\r\n                    <div>{'user.location.city'}</div>\r\n                </span>\r\n         </span>\r\n        </div>\r\n}\r\n","import React from \"react\";\r\nimport {UserType} from \"../types\";\r\nimport {Paginator} from \"../assets/common/Paginator/Paginator\";\r\nimport {User} from \"./User\";\r\n\r\ntype PropsType = {\r\n    onPageChanged: (p: number) => void\r\n    followingInProgress: number[]\r\n    totalUsersCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    users: Array<UserType>\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n    setUsers: (users: Array<UserType>) => void\r\n    setCurrentPage:  (pageNumber: number) => void\r\n    setTotalUsersCount: (totalCount: number) => void\r\n    toggleIsFetching: (isFetching: boolean) => void\r\n    toggleFollowingProgress: (isFetching: boolean, userId: number) => void\r\n    getUsers: (currentPage: number, pageSize: number) => void\r\n}\r\n\r\nexport let Users = (props: PropsType ) => {\r\n    return <div>\r\n                 <Paginator totalItemsCount={props.totalUsersCount}\r\n                  pageSize={props.pageSize}\r\n                  currentPage={props.currentPage}\r\n                  onPageChanged={props.onPageChanged}/>\r\n            <div>\r\n            { props.users.map(u => <User key={u.id}\r\n                                           user={u}\r\n                                           unfollow={props.unfollow}\r\n                                           follow={props.follow}\r\n                                           followingInProgress={props.followingInProgress}/>)}\r\n\r\n            </div>\r\n    </div>\r\n}\r\n","import {RootStateRedux} from \"./redux-store\";\r\n\r\nexport const getUsersState = (state: RootStateRedux) => {\r\n    return state.usersPage.users\r\n}\r\n/*export const getUsersSelector = (state: RootStateRedux) => {\r\n    return getUsersState(state).filter(u => true)\r\n}\r\nexport const getUsersSuperSelector = createSelector(getUsersState,getIsFetching,(users,isFetching) => {\r\n    return users.filter(u => true)\r\n})*/\r\nexport const getPageSize = (state: RootStateRedux) => {\r\n    return state.usersPage.pageSize\r\n}\r\n\r\nexport const getTotalUsersCount = (state: RootStateRedux) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\nexport const getCurrentPage = (state: RootStateRedux) => {\r\n    return state.usersPage.currentPage\r\n}\r\nexport const getIsFetching = (state: RootStateRedux) => {\r\n    return state.usersPage.isFetching\r\n}\r\nexport const getFollowingInProgress = (state: RootStateRedux) => {\r\n    return state.usersPage.followingInProgress\r\n}\r\n/*\r\nexport const getIsAuth = (state: RootStateRedux) => {\r\n    return state.usersPage.isAuth\r\n}*/\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    follow,\r\n    setCurrentPage,\r\n    setUsers, setTotalUsersCount, toggleIsFetching,\r\n    unfollowSuccess, toggleFollowingProgress, getUsers, unfollow,\r\n} from \"../Redux/users-reducer\";\r\nimport {RootStateRedux} from \"../Redux/redux-store\";\r\nimport {UserType} from \"../types\";\r\nimport {Users} from \"./Users\";\r\nimport {Preloader} from \"../assets/common/Preloader\";\r\nimport {withAuthRedirect} from \"../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsersState\r\n} from \"../Redux/users-selectors\";\r\n\r\n\r\nclass UsersContainer extends React.Component<MapDispatchToPropsType & MapStateToPropsType> {\r\n\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize)\r\n    }\r\n\r\n    onPageChanged = (pageNumber: number) => {\r\n        this.props.getUsers(pageNumber, this.props.pageSize)\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n\r\n            <Users\r\n                onPageChanged={this.onPageChanged}\r\n                pageSize={this.props.pageSize}\r\n                currentPage={this.props.currentPage}\r\n                users={this.props.users}\r\n                isFetching={this.props.isFetching}\r\n                totalUsersCount={this.props.totalUsersCount}\r\n                followingInProgress={this.props.followingInProgress}\r\n                follow={this.props.follow}\r\n                unfollow={this.props.unfollow}\r\n                setUsers={this.props.setUsers}\r\n                setCurrentPage={this.props.setCurrentPage}\r\n                setTotalUsersCount={this.props.setTotalUsersCount}\r\n                toggleIsFetching={this.props.toggleIsFetching}\r\n                toggleFollowingProgress={this.props.toggleFollowingProgress}\r\n                getUsers={this.props.getUsers}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nexport type MapStateToPropsType = {\r\n    users: UserType[],\r\n    currentPage: number\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    isFetching: boolean\r\n    followingInProgress: Array<number>\r\n   // isAuth: boolean\r\n}\r\nexport type MapDispatchToPropsType = {\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n    setUsers: (users: Array<UserType>) => void\r\n    setCurrentPage: (pageNumber: number) => void\r\n    setTotalUsersCount: (totalCount: number) => void\r\n    toggleIsFetching: (isFetching: boolean) => void\r\n    toggleFollowingProgress: (isFetching: boolean, userId: number) => void\r\n    getUsers: (currentPage: number, pageSize: number) => void\r\n}\r\n\r\nlet mapStateToProps = (state: RootStateRedux) => {\r\n    return {\r\n        users: getUsersState(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state),\r\n       /* isAuth: getIsAuth(state)*/\r\n    }\r\n}\r\n\r\n/*let mapStateToProps = (state: RootStateRedux): MapStateToPropsType => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        currentPage: state.usersPage.currentPage,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        isFetching: state.usersPage.isFetching,\r\n        followingInProgress: state.usersPage.followingInProgress,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}*/\r\n\r\n/* let mapDispatchToProps = (dispatch: Dispatch): MapDispatchToPropsType => {\r\n     return {\r\n         follow: (usersId: number) => {\r\n             dispatch(followAC(usersId))\r\n         },\r\n         unfollow: (usersId: number) => {\r\n             dispatch(unfollowAC(usersId))\r\n         },\r\n         setUsers: (users: Array<UserType>) => {\r\n             dispatch(setUsersAC(users))\r\n         },\r\n         setCurrentPage: (pageNumber: number) => {\r\n             dispatch(setCurrentPageAC(pageNumber))\r\n         },\r\n         setUsersTotalCount: (totalCount: number) => {\r\n             dispatch(setUsersTotalCountAC(totalCount))\r\n         },\r\n         toggleIsFetching: (isFetching: boolean) => {\r\n             dispatch(toggleIsFetchingAC(isFetching))\r\n         }\r\n     }\r\n }*/\r\n\r\nlet withRedirect = withAuthRedirect(UsersContainer)\r\n\r\n /*connect<MapStateToPropsType, MapDispatchToPropsType, {}, RootStateRedux>\r\n(mapStateToProps, {follow, unfollow: unfollowSuccess, setCurrentPage, toggleFollowingProgress, getUsers, setUsers, setTotalUsersCount, toggleIsFetching})(withRedirect)*/\r\n\r\n\r\nexport default compose<React.ComponentType>(\r\n   // withAuthRedirect,\r\n    connect<MapStateToPropsType, MapDispatchToPropsType, {}, RootStateRedux>\r\n    (mapStateToProps, {follow, unfollow: unfollowSuccess, setCurrentPage, toggleFollowingProgress, getUsers: getUsers, setUsers, setTotalUsersCount, toggleIsFetching})\r\n) (UsersContainer)","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nexport type HeaderPropsType = {\r\n  //  setAuthUserData: (id: number, email: string, login: string, isAuth: boolean) => void\r\n    isAuth: boolean\r\n    login: string | null\r\n    logout: () => void\r\n}\r\n\r\nconst Header = (props: HeaderPropsType) => {\r\n    return (\r\n        <header className={s.header}>\r\n            <img src='https://sun9-44.userapi.com/impf/c856136/v856136281/a9770/7RBeaUJ9A98.jpg?size=767x767&quality=96&proxy=1&sign=265e2a0e0a64547c891841d58ef10c51&type=album'/>\r\n            <div className={s.loginBlock}>\r\n                {props.isAuth\r\n                              ? <div>{props.login} - <button onClick={props.logout}>Log out</button> </div>\r\n                              : <NavLink to={'/login'}>Login</NavLink>}\r\n            </div>\r\n        </header>);\r\n}\r\nexport default Header;","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'samurai-network/auth/SET_USER_DATA'\r\n\r\nexport type InitialStateType = {\r\n    userId: number | null\r\n    email: string | null\r\n    login: string | null\r\n    isAuth: boolean\r\n}\r\n\r\nlet initialState: InitialStateType = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n}\r\n\r\nconst authReducer = (state = initialState, action: SetUserDataActionType): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport type SetUserDataActionType = ReturnType<typeof setAuthUserData>\r\n\r\nexport const setAuthUserData = (usersId: number | null, email: string | null, login: string | null, isAuth: boolean) => ({type: SET_USER_DATA, payload:{usersId, email,login, isAuth} } as const)\r\n\r\n    export const getAuthUserData = () => async (dispatch: any) => {\r\n            let response = await authAPI.me();\r\n\r\n            if (response.data.resultCode === 0) {\r\n                let {id, email, login} = response.data.data\r\n                dispatch(setAuthUserData(id, email, login, true))\r\n            }\r\n}\r\n\r\n    export const login = (email:string, password:string,rememberMe:boolean) => async (dispatch: any) => {\r\n\r\n         let response = await authAPI.login(email,password,rememberMe);\r\n         if(response.data.resultCode === 0){\r\n             dispatch(getAuthUserData())\r\n         } else {\r\n            let message = response.data.messages.length > 0\r\n                                    ? response.data.messages[0]\r\n                                    : \"some error\"\r\n             dispatch(stopSubmit(\"login\", {_error: message}))\r\n         }\r\n}\r\n\r\n    export const logout = () => async (dispatch: any) => {\r\n            let response = await authAPI.logout();\r\n            if(response.data.resultCode === 0){\r\n                dispatch(setAuthUserData(null,null,null,false))\r\n            }\r\n}\r\n\r\nexport default authReducer;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {RootStateRedux} from \"../Redux/redux-store\";\r\nimport { logout} from \"../Redux/auth-reducer\";\r\n\r\ntype PropsType = {\r\n    //setAuthUserData: (id: number, email: string, login: string, isAuth: boolean) => void\r\n    isAuth: boolean\r\n    login: string | null\r\n    logout: () => void\r\n}\r\n\r\nclass HeaderContainer extends React.Component<PropsType> {\r\n\r\n    render() {\r\n        return (\r\n            <Header /*setAuthUserData={this.props.setAuthUserData}*/\r\n            isAuth={this.props.isAuth}\r\n            login={this.props.login}\r\n            logout={this.props.logout}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: RootStateRedux ) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n})\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer)","import React from 'react'\r\nimport {reduxForm} from \"redux-form\";\r\nimport {connect} from \"react-redux\";\r\nimport {LoginForm} from \"./LoginForm\";\r\nimport {login} from \"../Redux/auth-reducer\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport {RootStateRedux} from \"../Redux/redux-store\";\r\n\r\nconst LoginReduxForm = reduxForm({ form: 'login'})(LoginForm)\r\n\r\nconst Login = (props: any) => {\r\n    const onSubmit = (formData: any) => {\r\n        props.login(formData.email, formData.password,formData.rememberMe)\r\n    }\r\n\r\n    if(props.isAuth) {\r\n        return <Redirect to={\"/profile\"}/>\r\n    }\r\n\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit}/>\r\n    </div>\r\n}\r\n\r\nconst mapStateToProps = (state: RootStateRedux) => ({\r\n   isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {login})(Login);","import {Field} from \"redux-form\";\r\nimport {required} from \"../utilities/validators/Validators\";\r\nimport {createField, Input} from \"../assets/common/FormsControls/FormsControls\";\r\nimport React from \"react\";\r\nimport s from \"../assets/common/FormsControls/FormsControls.module.css\"\r\n\r\ntype PropsType = {\r\n    handleSubmit: (formData: any) => void\r\n    error: string\r\n}\r\n\r\nexport const LoginForm: React.FC<PropsType> = ({handleSubmit,error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n                {createField(\"Email\",\"email\",[required],Input)}\r\n                {createField(\"Password\",\"password\",[required],Input,{type: \"password\"})}\r\n                {createField(null,\"rememberMe\",[],Input,{type: \"checkbox\"},\"remember me\")}\r\n            {error && <div className={s.formSummaryError}>\r\n                {error}\r\n            </div>}\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}","import {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS'\r\n\r\nexport type InitialStateType = {\r\n    initialized: boolean\r\n}\r\n\r\nlet initialState: InitialStateType = {\r\n    initialized: false\r\n}\r\n\r\nexport type ActionsType = ReturnType<typeof initializedSuccess>\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS }  as const)\r\n\r\n\r\nconst appReducer = (state = initialState, action:ActionsType ): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const initializeApp = () => (dispatch: any) => {\r\n    let promise = dispatch(getAuthUserData())\r\n    Promise.all([promise])\r\n        .then(() => {\r\n        dispatch(initializedSuccess())\r\n    })\r\n\r\n}\r\n\r\nexport default appReducer;","\r\nexport type SidebarStateType = {\r\n\r\n}\r\nlet initialState: SidebarStateType = {}\r\n\r\nconst sidebarReducer = (state: SidebarStateType = initialState, action: any): SidebarStateType => {\r\n\r\n\r\n    return state;\r\n}\r\nexport default sidebarReducer;","import {applyMiddleware, combineReducers, createStore, Store} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport {reducer as formReducer} from 'redux-form';\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet rootReducer = combineReducers({\r\n    profilePage:  profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n})\r\n// export type DispatchPropsType1 = typeof store.dispatch\r\nexport type RootStateRedux = ReturnType<typeof rootReducer>\r\nlet store: Store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\r\n\r\n// @ts-ignore\r\nwindow.store = store;\r\n\r\nexport default store;","import React from \"react\";\r\nimport {Preloader} from \"../assets/common/Preloader\";\r\n\r\nexport function withSuspense<WCP>(WrappedComponent: React.ComponentType<WCP>)  {\r\n\r\n     return (props: WCP) => {\r\n         return <React.Suspense fallback={<div>loading...</div>}>\r\n             <WrappedComponent {...props}/>\r\n         </React.Suspense>\r\n     }\r\n}","import React, {useEffect} from 'react';\nimport './App.css';\nimport Navbar from './Navbar/Navbar';\nimport News from \"./Profile/News/News\";\nimport Music from \"./Profile/Music/Music\";\nimport Settings from './Profile/Settings/Settings';\nimport {BrowserRouter, Route} from \"react-router-dom\";\nimport UsersContainer from \"./Users/UsersContainer\";\nimport HeaderContainer from \"./Header/HeaderContainer\";\nimport Login from \"./Login/Login\";\nimport {connect, Provider} from \"react-redux\";\nimport {withRouter} from \"react-router-dom\";\nimport {initializeApp} from \"./Redux/app-reducer\";\nimport store, {RootStateRedux} from \"./Redux/redux-store\";\nimport {Preloader} from \"./assets/common/Preloader\";\nimport {compose} from \"redux\";\nimport {withSuspense} from \"./hoc/withSuspense\";\nconst DialogsContainer = React.lazy(() => import('./Profile/Dialogs/DialogsContainer'));\nconst ProfileContainer = React.lazy(() => import('./Profile/ProfileContainer'));\nconst SuspendedDialogs = withSuspense(DialogsContainer)\nconst SuspendedProfile = withSuspense(ProfileContainer)\n\n\ntype MapStateToPropsType = {\n    initialized: boolean\n}\ntype MapDispatchToPropsType = {\n    initializeApp: () => void\n}\n\n// class App extends React.Component<MapStateToPropsType & MapDispatchToPropsType> {\n//\n//     componentDidMount() {\n//         this.props.initializeApp();\n//     }\n//\n//     render() {\n//         // if(!this.props.initialized) {\n//         //     return <Preloader/>\n//         // }\n//\n//         return (\n//                 <div className='app-wrapper'>\n//                     <HeaderContainer/>\n//                     <Navbar/>\n//                     <div className='app-wrapper-content'>\n//\n//                         <Route path='/dialogs'\n//                                render={() => <DialogsContainer/>}/>\n//                         <Route path='/profile/:userId?'\n//                                render={() => <ProfileContainer/>}/>\n//                         <Route path='/users'\n//                                render={() => <UsersContainer/>}/>\n//                         <Route path='/login' render={() => <Login/>}/>\n//                         <Route path='/dialogs' render={() => <News/>}/>\n//                         <Route path='/profile' render={() => <Music/>}/>\n//                         <Route path='/dialogs' render={() => <Settings/>}/>\n//\n//                     </div>\n//                 </div>\n//         );\n//     }\n// }\ntype PropsType = MapStateToPropsType & MapDispatchToPropsType\nconst App: React.FC<PropsType> = ({initialized,initializeApp} ) => {\n\n    useEffect(() => {\n       initializeApp()\n    },[])\n    if(!initialized) {\n        return <Preloader/>\n    }\n    return (\n        <div className='app-wrapper'>\n            <HeaderContainer/>\n            <Navbar/>\n            <div className='app-wrapper-content'>\n                <Route path='/dialogs'\n                       render={() => <SuspendedDialogs/>}/>\n                <Route path='/profile/:userId?'\n                       render={() => <SuspendedProfile/>}/>\n                <Route path='/users'\n                       render={() => <UsersContainer/>}/>\n                <Route path='/login' render={() => <Login/>}/>\n                <Route path='/dialogs' render={() => <News/>}/>\n                <Route path='/profile' render={() => <Music/>}/>\n                <Route path='/dialogs' render={() => <Settings/>}/>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state: RootStateRedux): MapStateToPropsType => ({\n    initialized: state.app.initialized\n})\n// export default App\n//\nconst AppContainer = compose<any>(\n    withRouter,\n    connect(mapStateToProps, {initializeApp}))(App)\n//  export default withRouter(connect(mapStateToProps, {initializeApp})(App))\n\nconst SamuraiJSApp = () => {\n    return <BrowserRouter>\n        <Provider store={store}>\n            <AppContainer />\n        </Provider>\n    </BrowserRouter>\n}\n\nexport default SamuraiJSApp","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport SamuraiJSApp from \"./App\";\n\n\nReactDOM.render( <SamuraiJSApp />\n  , document.getElementById('root'));\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import  React from \"react\"\r\nimport {Field, WrappedFieldProps} from \"redux-form\";\r\nimport s from './FormsControls.module.css'\r\nimport {required} from \"../../../utilities/validators/Validators\";\r\n\r\nconst FormControl: React.FC<WrappedFieldProps> = ({meta: {touched,error}, children}) => {\r\n    const hasError = touched && error\r\n\r\n    return <div className={s.formControl + \" \" + (hasError ? s.error : \"\")}>\r\n        <div>\r\n            {children}\r\n        </div>\r\n        {hasError && <span>{error}</span>}\r\n    </div>\r\n}\r\n\r\nexport const Textarea: React.FC<WrappedFieldProps>  = (props) => {\r\n    const {input,meta, ...restProps} = props\r\n    return <FormControl {...props}><textarea {...input} {...restProps}/></FormControl>\r\n}\r\n\r\nexport const Input: React.FC<WrappedFieldProps>  = (props) => {\r\n    const {input, meta, ...restProps} = props;\r\n  return <FormControl {...props}><input {...input} {...restProps}/></FormControl>\r\n}\r\n\r\nexport const createField = (placeholder: string | null,name:any,validators:any,component:any,props= {},text = \"\") => {\r\n   return <div>\r\n        <Field  placeholder={placeholder}\r\n                name={name}\r\n                validate={validators}\r\n                component={component}\r\n                {...props}\r\n        /> {text}\r\n    </div>\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__Ceuz6\",\"error\":\"FormsControls_error__2gDaN\",\"formSummaryError\":\"FormsControls_formSummaryError__r1pzm\"};","export default __webpack_public_path__ + \"static/media/Spin-1.4s-137px (1).509019ba.svg\";","import preloader from \"../images/Spin-1.4s-137px (1).svg\";\r\nimport React from \"react\";\r\n\r\n\r\nexport let Preloader = (props: any) => {\r\n    return <div style={{backgroundColor: ''}}>\r\n    <img src={preloader} />\r\n    </div>\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__245Xh\",\"pageNumber\":\"Paginator_pageNumber__2DhQX\",\"selectedPage\":\"Paginator_selectedPage__2JAKO\"};","import React from \"react\"\r\n\r\nexport const required = (value: any) => {\r\n   if(value) return undefined ;\r\n   return \"Field is required!\"\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength: any) => (value: any) => {\r\n    if(value.length > maxLength) return `Max length is ${maxLength} symbols` ;\r\n\r\n    return undefined;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3fFoF\",\"loginBlock\":\"Header_loginBlock__1Wask\"};","import React from 'react'\r\nimport {Redirect} from 'react-router'\r\nimport {RootStateRedux} from \"../Redux/redux-store\";\r\nimport {connect} from \"react-redux\";\r\n\r\ntype MapStatePropsType = {\r\n    isAuth: boolean\r\n}\r\n\r\nlet mapStateToPropsWithRedirect = (state: RootStateRedux)/*: MapStateToPropsType*/ => ({\r\n    isAuth: state.auth.isAuth\r\n} as MapStatePropsType)\r\n\r\nexport function withAuthRedirect<P>(Component: React.ComponentType<P>) {\r\n    const RedirectComponent: React.FC<MapStatePropsType> = (props) => {\r\n        let {isAuth, ...restProps} = props\r\n        if (!props.isAuth) return <Redirect to=\"/login\"/>\r\n\r\n        return <Component {...restProps as P}/>\r\n    }\r\n\r\n    let ConnectAuthRedirectComponent = connect(mapStateToPropsWithRedirect)(RedirectComponent)\r\n    return ConnectAuthRedirectComponent\r\n}","import {profileAPI, usersAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\n//const UPDATE_NEW_POST_TEXT = 'UPDATE_NEW_POST_TEXT';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST'\r\n\r\nexport type setUserProfile = {\r\n    type: 'SET_USER_PROFILE',\r\n    profile: any\r\n}\r\nexport type PostsPropsType = {\r\n    id: number\r\n    message: string\r\n    likesCount: number\r\n}\r\nexport type ProfileStateType = {\r\n    posts: Array<PostsPropsType>\r\n    newPostText: string,\r\n    profile: null,\r\n    status: string | null\r\n}\r\nlet initialState: ProfileStateType = {\r\n    posts: [\r\n        {id: 1, message: \"Hi, how are you?\", likesCount: 12},\r\n        {id: 2, message: \"It is my first post\", likesCount: 11},\r\n        {id: 3, message: \"Blabla\", likesCount: 11},\r\n        {id: 4, message: \"Dada\", likesCount: 11}\r\n    ],\r\n    newPostText: \"\",\r\n    profile: null,\r\n    status: \"\"\r\n}\r\nexport type ProfileActionsPropsType = ReturnType<typeof addPost> |\r\n   /* ReturnType<typeof updateNewPostText> |*/ ReturnType<typeof setStatus> | setUserProfile |\r\n    ReturnType<typeof deletePost>\r\n\r\n\r\nconst profileReducer = (state: ProfileStateType = initialState, action: ProfileActionsPropsType): ProfileStateType => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = { id: 5, message: action.newPostText, likesCount: 0 };\r\n            return {...state, posts: [...state.posts, newPost]}\r\n        }\r\n       /* case UPDATE_NEW_POST_TEXT: {\r\n            return {...state, newPostText: action.newText}\r\n        }*/\r\n        case SET_USER_PROFILE: {\r\n            return {...state, profile: action.profile}\r\n        }\r\n        case DELETE_POST: {\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(p => p.id !== action.postId)\r\n            }\r\n        }\r\n        case SET_STATUS: {\r\n            return {...state, status: action.status}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addPost = (newPostText: string) => ({\r\n    type: ADD_POST, newPostText } as const)\r\n\r\nexport const setUserProfile = (profile: ProfileStateType) => ({\r\n    type: SET_USER_PROFILE,\r\n    profile} as const)\r\n\r\nexport const setStatus = (status: string | null) => ({\r\n    type: SET_STATUS,\r\n    status} as const)\r\nexport const deletePost = (postId: number) => ({\r\n    type: DELETE_POST,\r\n    postId} as const)\r\n\r\nexport const getUserProfile = (userId: number) =>  async (dispatch: any) => {\r\n           let response = await usersAPI.getProfile(userId);\r\n           dispatch(setUserProfile(response.data))\r\n}\r\n\r\nexport const getStatus = (userId: number) => async (dispatch: any) => {\r\n           let response = await profileAPI.getStatus(userId);\r\n           dispatch(setStatus(response.data))\r\n}\r\n\r\nexport const updateStatus = (status:string) => async (dispatch: any) => {\r\n            let response = await profileAPI.updateStatus(status);\r\n            if(response.data.resultCode === 0) {\r\n                dispatch(setStatus(status))\r\n            }\r\n}\r\n\r\n /*export const updateNewPostText = (text: string) => ({\r\n        type: UPDATE_NEW_POST_TEXT,\r\n        newText: text} as const)*/\r\n\r\n\r\n\r\nexport default profileReducer;"],"sourceRoot":""}