{"version":3,"sources":["Profile/Dialogs/Dialogs.module.css","Users/users.module.css","Profile/MyPosts/ProfileInfo/ProfileInfo.module.css","Profile/MyPosts/MyPosts.module.css","Header/Header.module.css","Profile/MyPosts/Post/Post.module.css","Navbar/Navbar.module.css","Navbar/Navbar.tsx","Profile/News/News.tsx","Profile/Music/Music.tsx","Profile/Settings/Settings.tsx","Redux/dialogs-reducer.ts","Profile/Dialogs/DialogItem/DialogItem.tsx","Profile/Dialogs/Message/Message.tsx","Profile/Dialogs/Dialogs.tsx","Profile/Dialogs/DialogsContainer.tsx","Redux/users-reducer.ts","assets/images/390poHMbqew.jpg","api/api.ts","Users/Users.tsx","assets/images/Spin-1.4s-137px (1).svg","assets/common/Preloader.tsx","Users/UsersContainer.tsx","Profile/MyPosts/ProfileInfo/ProfileInfo.tsx","Redux/profile-reducer.ts","Profile/MyPosts/Post/Post.tsx","Profile/MyPosts/MyPosts.tsx","Profile/MyPosts/MyPostsContainer.tsx","Profile/Profile.tsx","Profile/ProfileContainer.tsx","Header/Header.tsx","Redux/auth-reducer.ts","Header/HeaderContainer.tsx","App.tsx","reportWebVitals.js","Redux/sidebar-reducer.ts","Redux/redux-store.ts","index.tsx"],"names":["module","exports","Navbar","className","s","nav","item","to","activeClassName","activeLink","active","News","props","Music","Settings","UPDATE_NEW_MESSAGE_BODY","SEND_MESSAGE","initialState","dialogs","id","name","messages","message","newMessageBody","dialogsReducer","state","action","type","body","DialogItem","path","dialog","Message","Dialogs","dialogsPage","dialogsElements","map","d","messagesElements","m","dialogsItems","e","currentTarget","value","updateNewMessageBody","sendMessage","DialogsContainer","connect","dispatch","updateNewMessageBodyCreator","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","users","pageSize","totalUsersCount","currentPage","isFetching","followingInProgress","usersReducer","u","usersId","followed","count","userId","filter","instance","axios","create","withCredentials","baseURL","headers","usersAPI","get","then","response","data","Users","pagesCount","Math","ceil","pages","i","push","p","styles","selectedPage","onClick","onPageChanged","src","photos","small","userPhoto","disabled","some","toggleFollowingProgress","delete","resultCode","unfollow","post","follow","fullName","status","Preloader","style","backgroundColor","preloader","UsersContainer","pageNumber","setCurrentPage","toggleIsFetching","setUsers","items","this","setTotalUsersCount","totalCount","React","Component","usersPage","ProfileInfo","profile","img","descriptionBlock","large","ADD_POST","UPDATE_NEW_POST_TEXT","SET_USER_PROFILE","posts","likesCount","newPostText","profileReducer","newPost","newText","Post","MyPosts","postsElements","postsBlock","onChange","updateNewPostText","addPost","profilePage","text","Profile","MyPostsContainer","ProfileContainer","match","params","Number","undefined","setUserProfile","WithUrlDataContainerComponent","withRouter","Header","header","loginBlock","isAuth","login","SET_USER_DATA","email","authReducer","HeaderContainer","setAuthUserData","auth","App","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","sidebarReducer","reducers","combineReducers","sidebar","store","createStore","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.4d826e06.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__XUIay\",\"dialogsItems\":\"Dialogs_dialogsItems__3HR55\",\"active\":\"Dialogs_active__ICjGL\",\"messages\":\"Dialogs_messages__36TXD\",\"message\":\"Dialogs_message__2DeW4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__2_u8Z\",\"selectedPage\":\"users_selectedPage__3USs1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__w7-vB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__yxqJL\",\"posts\":\"MyPosts_posts__2cETP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3fFoF\",\"loginBlock\":\"Header_loginBlock__1Wask\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Post_content__3LncI\",\"item\":\"Post_item__1awDx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3SeaK\",\"item\":\"Navbar_item__1VkP1\",\"activeLink\":\"Navbar_activeLink__1NHh2\"};","import React from 'react';\r\nimport  s from'./Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n /*let s = {\r\n     'nav': 'Navbar_nav__3Rdw3',\r\n     'item': 'Navbar__item__2k32d'\r\n } */\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n        <div className={s.item}>\r\n         <NavLink to=\"/profile\" activeClassName={s.activeLink}> Profile</NavLink>\r\n        </div>\r\n        <div className={`${s.item} ${s.active}`}>\r\n         <NavLink to=\"/dialogs\" activeClassName={s.activeLink} > Messages</NavLink>\r\n        </div>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to=\"/users\" activeClassName={s.activeLink} > Users</NavLink>\r\n            </div>\r\n        <div  className={`${s.item} ${s.active}`}>\r\n            <NavLink to=\"/news\" activeClassName={s.activeLink} > News</NavLink>\r\n        </div>\r\n        <div className={`${s.item} ${s.active}`}>\r\n            <NavLink to=\"/music\" activeClassName={s.activeLink} > Music</NavLink>\r\n        </div>\r\n        <div className={`${s.item} ${s.active}`}>\r\n            <NavLink to=\"/settings\" activeClassName={s.activeLink} > Settings</NavLink>\r\n        </div>\r\n      </nav>\r\n    );\r\n\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\rimport s from './News.module.css';\r\rtype NewsPropsType = {\r\r}\r\rconst News = (props: NewsPropsType) => {\r    return (\r        <div>\r        </div>\r\r    )\r}\r\rexport default News;","import React from 'react';\rimport s from './Music.module.css';\rconst Music = () => {\r    return (\r        <div>\r        </div>\r\r    )\r}\r\rexport default Music;","import React from 'react';\rimport s from './Settings.module.css';\r\rtype SettingsPropsType = {\r\r}\r\rconst Settings = (props: SettingsPropsType) => {\r    return (\r        <div>\r        </div>\r\r    )\r}\r\rexport default Settings;","const UPDATE_NEW_MESSAGE_BODY = \"UPDATE_NEW_MESSAGE_BODY\";\r\nconst SEND_MESSAGE = \"SEND_MESSAGE\";\r\n\r\n\r\nexport type DialogsPropsType = {\r\n    id: number\r\n    name: string\r\n}\r\nexport type MessagesPropsType = {\r\n    id: number\r\n    message: string\r\n}\r\n\r\nexport type DialogsStateType = {\r\n    dialogs: Array<DialogsPropsType>\r\n    messages:  Array<MessagesPropsType>\r\n    newMessageBody: string\r\n}\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: \"Dimych\"},\r\n        {id: 2, name: \"Viktor\"},\r\n        {id: 3, name: \"Sveta\"},\r\n        {id: 4, name: \"Andrew\"},\r\n        {id: 5, name: \"Sasha\"},\r\n        {id: 6, name: \"Valera\"},\r\n    ],\r\n    messages: [\r\n        {id: 1, message: \"Hi\"},\r\n        {id: 2, message: \"How is your It-kamasutra? \"},\r\n        {id: 3, message: \"Yo\"},\r\n        {id: 4, message: \"Yo\"},\r\n        {id: 5, message: \"Yo\"}\r\n    ],\r\n    newMessageBody: \"\"\r\n}\r\n\r\nexport type sendMessageAC = {\r\n    type: \"SEND_MESSAGE\"\r\n}\r\nexport type updateMessageAC = {\r\n    type: \"UPDATE_NEW_MESSAGE_BODY\"\r\n    body: string\r\n}\r\n\r\nexport type actionsMessageType = sendMessageAC | updateMessageAC\r\nconst dialogsReducer = (state: DialogsStateType = initialState, action: actionsMessageType): DialogsStateType => {\r\n\r\n    switch (action.type) {\r\n        case UPDATE_NEW_MESSAGE_BODY:\r\n            return {...state, newMessageBody: action.body}\r\n        case SEND_MESSAGE:\r\n            let body = state.newMessageBody;\r\n            return {\r\n                ...state,\r\n                newMessageBody: \"\",\r\n                messages: [...state.messages,\r\n                    {id: 6, message: body}]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const sendMessageCreator = () => ({type: SEND_MESSAGE} as const)\r\nexport const updateNewMessageBodyCreator = (body: string) =>\r\n    ({type: UPDATE_NEW_MESSAGE_BODY, body: body} as const)\r\n\r\nexport default dialogsReducer;","import React from 'react';\rimport s from './../Dialogs.module.css';\rimport {NavLink} from \"react-router-dom\";\r\rtype DialogItemPropsType = {\r    id: number\r    name: string\r}\r\rconst DialogItem = (props: DialogItemPropsType) => {\r    let path = \"/dialogs/1\" + props.id;\r\r    return  <div className={s.dialog + ' ' + s.active}>\r        <NavLink to={path}>{props.name}</NavLink>\r    </div>\r}\r\r\rexport default DialogItem;","import React from 'react';\rimport s from './../Dialogs.module.css';\r\rtype MessagePropsType = {\r    message: string\r}\r\rconst Message = (props: MessagePropsType) => {\r    return <div className=\"message\">{props.message}</div>\r}\r\r\r\rexport default Message","import React, {ChangeEvent} from 'react';\rimport s from './Dialogs.module.css';\rimport DialogItem from \"./DialogItem/DialogItem\";\rimport Message from \"./Message/Message\";\rimport {DialogPageType} from \"../../Redux/store\";\r\r\rtype StatePropsType = {\r    dialogsPage: DialogPageType\r    sendMessage: () => void,\r    updateNewMessageBody: (text: string) => void,\r    // isAuth: boolean\r};\r\rtype DialogPropsType = {\r    dialogs: Array<DialogsItemsType>,\r    messages: Array<MessagesItemsType>,\r\r}\rtype DialogsItemsType = {\r    name: string,\r    id: number,\r}\r\rtype MessagesItemsType = {\r    message: string,\r\r}\r\rconst Dialogs = (props: StatePropsType) => {\r  let state = props.dialogsPage;\r\r    let dialogsElements = props.dialogsPage.dialogs.map(d => <DialogItem name={d.name} id={d.id}/>);\r    let messagesElements = props.dialogsPage.messages.map(m  => <Message message={m.message} key={m.id}/>);\r    let newMessageBody = props.dialogsPage.newMessageBody;\r    let onSendMessageClick = () => {\r        props.sendMessage();\r    }\r    let onNewMessageChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\r       let body = e.currentTarget.value;\r       props.updateNewMessageBody(body);\r    }\r    return (\r        <div className={s.dialogs}>\r            <div className={s.dialogsItems}>\r                {dialogsElements}\r            </div>\r            <div className=\"messages\">\r                <div>{messagesElements}</div>\r                <div>\r                    <div><textarea\r                        onChange={onNewMessageChange}\r                        value={newMessageBody}\r                        placeholder='Enter your message'>\r                    </textarea></div>\r                    <div>\r                        <button onClick={onSendMessageClick}>Send</button>\r                    </div>\r                </div>\r            </div>\r        </div>\r    )\r}\r\rexport default Dialogs;","import React, {ChangeEvent} from 'react';\rimport {\r    DialogsStateType,\r    sendMessageAC,\r    sendMessageCreator,\r    updateNewMessageBodyCreator\r} from \"../../Redux/dialogs-reducer\";\rimport Dialogs from \"./Dialogs\";\rimport {connect} from \"react-redux\";\rimport  {ActionPropsType} from \"../../Redux/store\";\rimport {RootStateRedux} from \"../../Redux/redux-store\";\rimport {Dispatch} from \"redux\";\r\r\rtype MapStateToPropsType = {\r    dialogsPage: DialogsStateType\r}\r\rtype MapDispatchToPropsType = {\r    sendMessage: () => void\r    updateNewMessageBody: (body: string) => void\r}\r\rexport type sendMessageActionCreator = {\r    sendMessageCreator: (type: \"SEND_MESSAGE\") => void\r\r}\rexport type updateNewMessageBodyCreatorType = {\r    updateNewMessageBodyCreator: (type: \"UPDATE_NEW_MESSAGE_BODY\", body: string) => void\r}\r\r\rexport type DispatchPropsType = sendMessageActionCreator | updateNewMessageBodyCreatorType\r\r   let mapStateToProps = (state: RootStateRedux) => {\r    return {\r        dialogsPage: state.dialogsPage\r    }\r }\r   let mapDispatchToProps = (dispatch: Dispatch): MapDispatchToPropsType => {\r    return {\r        sendMessage: () => {\r            dispatch(sendMessageCreator());\r        },\r        updateNewMessageBody: (body: string) => {\r            dispatch(updateNewMessageBodyCreator(body));\r        }\r    }\r}\r\rconst DialogsContainer = connect<MapStateToPropsType, MapDispatchToPropsType, {}, RootStateRedux>(mapStateToProps, mapDispatchToProps)(Dialogs);\r\r\rexport default DialogsContainer;","import {UserType} from \"../types\";\r\n\r\nconst FOLLOW = 'FOLLOW'\r\nconst UNFOLLOW = 'UNFOLLOW'\r\nconst SET_USERS = 'SET_USERS'\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE'\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT'\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING'\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS'\r\n\r\nexport type FollowACType = {\r\n    type: 'FOLLOW'\r\n    usersId: number\r\n}\r\nexport type UnFollowACType = {\r\n    type: 'UNFOLLOW'\r\n    usersId: number\r\n}\r\nexport type SetUsersACType = {\r\n    type: 'SET_USERS'\r\n    users: UserType[]\r\n}\r\nexport type SetCurrentPageACType = {\r\n    type: 'SET_CURRENT_PAGE'\r\n    currentPage: number\r\n}\r\nexport type SetUsersTotalCountACType = {\r\n    type: 'SET_TOTAL_USERS_COUNT'\r\n    count: number\r\n}\r\nexport type toggleIsFetchingACType = {\r\n    type: 'TOGGLE_IS_FETCHING'\r\n    isFetching: boolean\r\n}\r\nexport type toggleFollowingProgressACType = {\r\n    type: 'TOGGLE_IS_FOLLOWING_PROGRESS'\r\n    isFetching: boolean\r\n    userId: number\r\n}\r\nexport type UsersACType = FollowACType | UnFollowACType |\r\n    SetUsersACType | SetCurrentPageACType |\r\n    SetUsersTotalCountACType | toggleIsFetchingACType | toggleFollowingProgressACType\r\n\r\nlet initialState = {\r\n    users: [ ] as UserType[],\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: [] as Array<number>\r\n}\r\n\r\ntype InitialState = typeof initialState;\r\n\r\nconst usersReducer = (state = initialState, action: UsersACType): InitialState => {\r\n\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.usersId) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.usersId) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n        case SET_USERS: {\r\n            return {...state, users: action.users}\r\n        }\r\n        case  SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case  SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalUsersCount: action.count}\r\n        }\r\n        case  TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case  \"TOGGLE_IS_FOLLOWING_PROGRESS\": {\r\n            return {...state, followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress,  action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const follow = (usersId: number): FollowACType => ({type: FOLLOW, usersId})\r\nexport const unfollow = (usersId: number): UnFollowACType => ({type: UNFOLLOW, usersId})\r\nexport const setUsers = (users: Array<UserType>): SetUsersACType => ({type: SET_USERS, users})\r\nexport const setCurrentPage = (currentPage: number): SetCurrentPageACType => ({type: SET_CURRENT_PAGE, currentPage})\r\nexport const setTotalUsersCount = (totalUsersCount: number): SetUsersTotalCountACType => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount})\r\nexport const toggleIsFetching = (isFetching: boolean): toggleIsFetchingACType  => ({type: TOGGLE_IS_FETCHING, isFetching})\r\nexport const toggleFollowingProgress = (isFetching: boolean, userId: number): toggleFollowingProgressACType  => ({type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId})\r\n\r\n\r\nexport default usersReducer;","export default __webpack_public_path__ + \"static/media/390poHMbqew.5605775c.jpg\";","import axios from \"axios\";\r\n\r\n\r\nexport const instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"e08e1901-cb67-4f8e-968d-12deec271219\"\r\n    }\r\n})\r\n\r\nexport const usersAPI = {\r\n    getUsers: (currentPage: number = 1, pageSize: number = 10) => {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n\r\n    },\r\n    getProfile: () => {\r\n\r\n    }\r\n}","import React from \"react\";\r\nimport styles from \"./users.module.css\";\r\nimport userPhoto from \"../assets/images/390poHMbqew.jpg\";\r\nimport {MapDispatchToPropsType, MapStateToPropsType} from \"./UsersContainer\";\r\nimport {NavLink} from \"react-router-dom\"\r\nimport {instance} from \"../api/api\";\r\nimport {UserType} from \"../types\";\r\n\r\ntype PropsType = {\r\n    onPageChanged: (p: number) => void\r\n    followingInProgress: number[]\r\n    totalUsersCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    users: Array<UserType>\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n    setUsers: (users: Array<UserType>) => void\r\n    setCurrentPage:  (pageNumber: number) => void\r\n    setTotalUsersCount: (totalCount: number) => void\r\n    toggleIsFetching: (isFetching: boolean) => void\r\n    toggleFollowingProgress: (isFetching: boolean, userId: number) => void\r\n}\r\n\r\nexport let Users = (props: MapDispatchToPropsType & MapStateToPropsType & PropsType ) => {\r\n\r\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize)\r\n\r\n    let pages = []\r\n    for(let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n    return <div>\r\n        <div>\r\n            {pages.map(p => {\r\n                return <span className={props.currentPage === p ? styles.selectedPage: ''}\r\n                             onClick={ (e) => { props.onPageChanged(p) }}\r\n                >{p}</span>\r\n            })}\r\n        </div>\r\n        <div>\r\n            {\r\n                props.users.map(u => <div key={u.id}>\r\n        <span>\r\n            <div>\r\n                <NavLink to={'./profile/' + u.id}>\r\n                     <img src={u.photos.small != null ? u.photos.small : userPhoto} className={styles                                 .userPhoto}/>\r\n                </NavLink>\r\n            </div>\r\n             <div>{u.followed\r\n                 ?  <button disabled={props.followingInProgress\r\n                            .some(id => id === u.id)}\r\n                            onClick={() => {\r\n                            props.toggleFollowingProgress(true, u.id)\r\n                     return instance.delete(`follow/${u.id}`,  {\r\n                         withCredentials: true,\r\n                         headers: {\r\n                             \"API-KEY\": \"e08e1901-cb67-4f8e-968d-12deec271219\"\r\n                         }\r\n                       })\r\n                         .then(response => {\r\n                             if(response.data.resultCode == 0){\r\n                                 props.unfollow(u.id)    }\r\n                             props.toggleFollowingProgress(false,u.id)\r\n                         })\r\n\r\n\r\n                 }}>Unfollow</button>\r\n                 : <button disabled={props.followingInProgress.some(id => id === u.id)}\r\n                           onClick={() => {\r\n                     props.toggleFollowingProgress(true, u.id)\r\n                     instance.post(`follow/${u.id}`, {}, {\r\n                         withCredentials: true\r\n                     })\r\n                         .then(response => {\r\n                            if(response.data.resultCode == 0){\r\n                                props.follow(u.id)}\r\n                             props.toggleFollowingProgress(false, u.id)\r\n                         })\r\n                 }}>Follow</button>}\r\n            </div>\r\n        </span>\r\n                    <span>\r\n                <span>\r\n                    <div>{u.fullName}</div>\r\n                    <div>{u.status}</div>\r\n                </span>\r\n                <span>\r\n                    <div>{\"u.location.country\"}</div>\r\n                    <div>{\"u.location.city\"}</div>\r\n                </span>\r\n                </span>\r\n                </div>)\r\n            }\r\n        </div>\r\n    </div>\r\n}\r\n","export default __webpack_public_path__ + \"static/media/Spin-1.4s-137px (1).509019ba.svg\";","import preloader from \"../images/Spin-1.4s-137px (1).svg\";\r\nimport React from \"react\";\r\n\r\n\r\nexport let Preloader = (props: any) => {\r\n    return <div style={{backgroundColor: 'white'}}>\r\n    <img src={preloader} />\r\n    </div>\r\n}","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    follow,\r\n    setCurrentPage,\r\n    setUsers, setTotalUsersCount, toggleIsFetching,\r\n    unfollow, toggleFollowingProgress,\r\n} from \"../Redux/users-reducer\";\r\nimport {RootStateRedux} from \"../Redux/redux-store\";\r\nimport {UserType} from \"../types\";\r\nimport {Users} from \"./Users\";\r\nimport {Preloader} from \"../assets/common/Preloader\";\r\nimport { usersAPI} from \"../api/api\";\r\n\r\n\r\nclass UsersContainer extends React.Component< MapDispatchToPropsType & MapStateToPropsType> {\r\n    componentDidMount() {\r\n        this.props.toggleIsFetching(true)\r\n            usersAPI.getUsers(this.props.currentPage, this.props.pageSize).then(data => {\r\n                this.props.toggleIsFetching(false)\r\n                this.props.setUsers(data.items)\r\n                this.props.setTotalUsersCount(data.totalCount)\r\n            })\r\n\r\n    }\r\n\r\n    onPageChanged = (pageNumber: number) => {\r\n        this.props.setCurrentPage(pageNumber)\r\n        this.props.toggleIsFetching(true)\r\n        usersAPI.getUsers(pageNumber, this.props.pageSize).then(data => {\r\n                this.props.toggleIsFetching(true)\r\n                this.props.setUsers(data.items)\r\n            })\r\n    }\r\n\r\n    render() {\r\n\r\n        return <>\r\n            {this.props.isFetching\r\n                ? <Preloader/>\r\n                : null}\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                      pageSize={this.props.pageSize}\r\n                      currentPage={this.props.currentPage}\r\n                      onPageChanged={this.onPageChanged}\r\n                      users={this.props.users}\r\n                      follow={this.props.follow}\r\n                      unfollow={this.props.unfollow}\r\n                      setCurrentPage={this.props.setCurrentPage}\r\n                      setTotalUsersCount={this.props.setTotalUsersCount}\r\n                      setUsers={this.props.setUsers}\r\n                      isFetching={this.props.isFetching}\r\n                      toggleIsFetching={this.props.toggleIsFetching}\r\n                   followingInProgress={this.props.followingInProgress}\r\n                     toggleFollowingProgress={this.props.toggleFollowingProgress}/>\r\n        </>\r\n    }\r\n}\r\n\r\nexport type MapStateToPropsType = {\r\n    users: UserType[],\r\n    currentPage: number\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    isFetching: boolean\r\n    followingInProgress: Array<number>\r\n}\r\n export type MapDispatchToPropsType = {\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n    setUsers: (users: Array<UserType>) => void\r\n    setCurrentPage:  (pageNumber: number) => void\r\n    setTotalUsersCount: (totalCount: number) => void\r\n     toggleIsFetching: (isFetching: boolean) => void\r\n     toggleFollowingProgress: (isFetching: boolean, userId: number) => void\r\n}\r\n\r\n\r\nlet mapStateToProps = (state: RootStateRedux ):  MapStateToPropsType => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        followingInProgress: state.usersPage.followingInProgress\r\n    }\r\n}\r\n\r\n   /* let mapDispatchToProps = (dispatch: Dispatch): MapDispatchToPropsType => {\r\n        return {\r\n            follow: (usersId: number) => {\r\n                dispatch(followAC(usersId))\r\n            },\r\n            unfollow: (usersId: number) => {\r\n                dispatch(unfollowAC(usersId))\r\n            },\r\n            setUsers: (users: Array<UserType>) => {\r\n                dispatch(setUsersAC(users))\r\n            },\r\n            setCurrentPage: (pageNumber: number) => {\r\n                dispatch(setCurrentPageAC(pageNumber))\r\n            },\r\n            setUsersTotalCount: (totalCount: number) => {\r\n                dispatch(setUsersTotalCountAC(totalCount))\r\n            },\r\n            toggleIsFetching: (isFetching: boolean) => {\r\n                dispatch(toggleIsFetchingAC(isFetching))\r\n            }\r\n        }\r\n    }*/\r\n\r\n\r\n    export default connect<MapStateToPropsType, MapDispatchToPropsType, {}, RootStateRedux>\r\n    (mapStateToProps, {follow, unfollow, setUsers, setCurrentPage,\r\n            setTotalUsersCount,toggleIsFetching, toggleFollowingProgress})(UsersContainer)\r\n","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport {Preloader} from \"../../../assets/common/Preloader\";\r\ntype ProfileInfoPropsType = {\r\n  profile: any\r\n}\r\n\r\nconst ProfileInfo = (props: ProfileInfoPropsType) => {\r\n    if(!props.profile){\r\n        return <Preloader/>\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n        <div className={s.img}>\r\n        <img src='https://sun9-36.userapi.com/impg/HZnWrqzamma2_Yw7xcSD-8XXR_IZKSxjJp0WNQ/EYak3s-RlnY\r\n.jpg?size=1080x1079&quality=96&proxy=1&sign=8743d906f74b4baec37a9fb4f8481d8a&type=album' />\r\n        </div>\r\n        <div className={s.descriptionBlock}>\r\n            <img src={props.profile.photos.large}/>\r\n          ava + description\r\n        </div>\r\n\r\n      </div>\r\n\r\n    );\r\n}\r\n\r\nexport default ProfileInfo;","const ADD_POST = 'ADD-POST';\r\nconst UPDATE_NEW_POST_TEXT = 'UPDATE_NEW_POST_TEXT';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\n\r\n\r\nexport type PostsPropsType = {\r\n    id: number\r\n    message: string\r\n    likesCount: number\r\n}\r\nexport type ProfileStateType = {\r\n    posts: Array<PostsPropsType>\r\n    newPostText: string,\r\n    profile: any\r\n}\r\nlet initialState: ProfileStateType = {\r\n    posts: [\r\n        {id: 1, message: \"Hi, how are you?\", likesCount: 12},\r\n        {id: 2, message: \"It is my first post\", likesCount: 11},\r\n        {id: 3, message: \"Blabla\", likesCount: 11},\r\n        {id: 4, message: \"Dada\", likesCount: 11}\r\n    ],\r\n    newPostText: \"\",\r\n    profile: null\r\n}\r\nexport type ProfileActionsPropsType = ReturnType<typeof addPost> | ReturnType<typeof updateNewPostText> | setUserProfile\r\n// export type addPostAC = {\r\n//     type: 'ADD-POST'\r\n// }\r\n// export type updateNewPostTextAC = {\r\n//     type: 'UPDATE_NEW_POST_TEXT'\r\n//     newText: string\r\n// }\r\n\r\nconst profileReducer = (state: ProfileStateType = initialState, action: ProfileActionsPropsType): ProfileStateType => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: state.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {...state, posts: [...state.posts, newPost]}\r\n        }\r\n        case UPDATE_NEW_POST_TEXT: {\r\n            return {...state, newPostText: action.newText}\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {...state, profile: action.profile}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n// export const addPostActionCreator = () => ({type: ADD_POST} as const)\r\nexport const addPost = () => ({type: ADD_POST} as const)\r\nexport const setUserProfile = (profile: any) => ({type: SET_USER_PROFILE, profile} as const)\r\n// export const updateNewPostTextActionCreator = (text: string) =>\r\nexport const updateNewPostText = (text: string) =>\r\n    ({type: UPDATE_NEW_POST_TEXT, newText: text} as const)\r\nexport type setUserProfile = {\r\n    type: 'SET_USER_PROFILE',\r\n    profile: any\r\n}\r\n\r\nexport default profileReducer;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\ntype PostPropsType = {\r\n    message: string\r\n    likesCount: number\r\n}\r\n\r\nconst Post = (props: PostPropsType ) => {\r\n    return (\r\n         <div className={s.item}>\r\n             <img src='https://sun9-35.userapi.com/impf/HLP5CRTKbRvZisagdIWhrAzNRGxoFve9ZFJwLQ/ezCvng_UZZM.jpg?size=864x1080&quality=96&sign=439b5cff05a0cf4601e2b7c9f7625386&type=album' />\r\n             {props.message}\r\n             <div> <span>like</span> {props.likesCount}\r\n              </div>\r\n          </div>\r\n          \r\n    );\r\n}\r\n\r\nexport default Post;","import React, {ChangeEvent} from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {PostsPropsType} from \"../../Redux/profile-reducer\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {RootStateRedux} from \"../../Redux/redux-store\";\r\n\r\nexport type MyPostsPropsType = {\r\n    posts: Array<PostsPropsType>\r\n    newPostText: string\r\n    addPost: () => void\r\n    // onPostChange: (text: string) => void\r\n    updateNewPostText: (text: string) => void\r\n}\r\n\r\nconst MyPosts = (props:MyPostsPropsType) => {\r\n\r\n    let postsElements =\r\n       props.posts.map((p, i) => <Post key={i} message={p.message} likesCount={p.likesCount}/>);\r\n\r\n    let onAddPost = () => {\r\n        props.addPost();\r\n    }\r\n\r\n    let onPostChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n            props.updateNewPostText(e.currentTarget.value);\r\n    }\r\n\r\n        return (\r\n            <div className={s.postsBlock}>\r\n                <h3> My posts </h3>\r\n                <div>\r\n                    <div>\r\n                        <textarea onChange={onPostChange} value={props.newPostText}/>\r\n                    </div>\r\n                    <div>\r\n                        <button onClick={onAddPost}>Add post</button>\r\n                    </div>\r\n                </div>\r\n                <div className={s.posts}>\r\n                    {postsElements}\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n}\r\nexport default MyPosts","import React from 'react';\r\nimport {addPost, PostsPropsType, updateNewPostText} from \"../../Redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {\r\n    connect,\r\n} from \"react-redux\";\r\nimport {RootStateRedux} from \"../../Redux/redux-store\";\r\n\r\n\r\nexport type MapStateToPropsType = {\r\n    posts: Array<PostsPropsType>\r\n    newPostText: string\r\n}\r\nexport type MapDispatchToPropsType = {\r\n    updateNewPostText: (text: string) => void\r\n    addPost: () => void\r\n}\r\n\r\nconst mapStateToProps = (state: RootStateRedux): MapStateToPropsType => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n// /*const mapDispatchToProps = (dispatch: Dispatch): MapDispatchToPropsType => {\r\n//     return {\r\n//         updateNewPostText: (text: string) => {\r\n//             let action = updateNewPostTextActionCreator(text);\r\n//             dispatch(action)\r\n//         },\r\n//         addPost: () => {\r\n//             dispatch(addPostActionCreator());\r\n//         }\r\n//     }\r\n// }*/\r\n\r\n\r\nexport default connect<MapStateToPropsType, MapDispatchToPropsType, {}, RootStateRedux>\r\n(mapStateToProps, {addPost, updateNewPostText})(MyPosts) /*as ConnectedComponent<any, {}>*/","import React from 'react';\r\nimport ProfileInfo from \"./MyPosts/ProfileInfo/ProfileInfo\";\r\nimport MyPosts from \"./MyPosts/MyPosts\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nexport type ProfilePropsType = {\r\n      profile: any\r\n}\r\n\r\nconst Profile = (props: ProfilePropsType) => {\r\n\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile}/>\r\n           <MyPostsContainer />\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport axios from \"axios\";\r\nimport {connect} from \"react-redux\";\r\nimport {RouteComponentProps, withRouter } from 'react-router-dom';\r\nimport {RootStateRedux} from \"../Redux/redux-store\";\r\nimport {instance} from \"../api/api\";\r\nimport {setUserProfile} from \"../Redux/profile-reducer\";\r\n\r\n\r\ntype MapStateToPropsType = {\r\n    profile: any\r\n}\r\n\r\ntype MapDispatchToPropsType = {\r\n    setUserProfile: (data: any) => void\r\n}\r\ntype PropsType = MapStateToPropsType & MapDispatchToPropsType\r\ntype PathParamsType = {\r\n    userId: string | undefined\r\n}\r\ntype AllPropsType = RouteComponentProps<PathParamsType> & PropsType\r\n\r\n\r\nclass ProfileContainer extends React.Component<AllPropsType> {\r\n\r\ncomponentDidMount() {\r\n    let userId: number | undefined = this.props.match.params.userId ? Number(this.props.match.params.userId): undefined\r\n    if(!userId){\r\n        userId = 2\r\n    }\r\n    instance.get(`profile/` + userId)\r\n        .then(response => {\r\n            this.props.setUserProfile(response.data)\r\n        })\r\n}\r\n    render() {\r\n    return (\r\n        <Profile {...this.props} profile={this.props.profile}/>\r\n    );\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state: RootStateRedux): MapStateToPropsType => ({\r\n    profile: state.profilePage.profile\r\n})\r\n  let WithUrlDataContainerComponent  = withRouter(ProfileContainer)\r\n\r\n\r\nexport default connect(mapStateToProps, {setUserProfile}) (WithUrlDataContainerComponent)","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nexport type HeaderPropsType = {\r\n    setAuthUserData: (id: number, email: string, login: string, isAuth: boolean) => void\r\n    isAuth: boolean\r\n    login: string | null\r\n}\r\n\r\nconst Header = (props: HeaderPropsType) => {\r\n    return (\r\n        <header className={s.header}>\r\n            <img src='https://sun9-44.userapi.com/impf/c856136/v856136281/a9770/7RBeaUJ9A98.jpg?size=767x767&quality=96&proxy=1&sign=265e2a0e0a64547c891841d58ef10c51&type=album'/>\r\n            <div className={s.loginBlock}>\r\n                {props.isAuth\r\n                              ? props.login\r\n                              : <NavLink to={'/login'}>Login</NavLink>}\r\n            </div>\r\n        </header>);\r\n}\r\nexport default Header;","const SET_USER_DATA = 'SET_USER_DATA'\r\n\r\nexport type InitialStateType = {\r\n    userId: number | null\r\n    email: string | null\r\n    login: string | null\r\n    isAuth: boolean\r\n}\r\n\r\nlet initialState: InitialStateType = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n}\r\n\r\n\r\nconst authReducer = (state = initialState, action: SetUserDataActionType): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.data,\r\n                isAuth: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport type SetUserDataActionType = ReturnType<typeof setAuthUserData>\r\nexport const setAuthUserData = (usersId: number, email: string, login: string, isAuth: boolean) => ({type: SET_USER_DATA, data:{usersId, email,login, isAuth}}as const)\r\n\r\n\r\nexport default authReducer;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {setAuthUserData} from \"../Redux/auth-reducer\";\r\nimport {instance} from \"../api/api\";\r\nimport {RootStateRedux} from \"../Redux/redux-store\";\r\n\r\ntype PropsType = {\r\n    setAuthUserData: (id: number, email: string, login: string, isAuth: boolean) => void\r\n    isAuth: boolean\r\n    login: string | null\r\n}\r\n\r\nclass HeaderContainer extends React.Component<PropsType> {\r\n    componentDidMount() {\r\n        instance.get(`auth/me`, {\r\n            withCredentials: true\r\n        })\r\n            .then(response => {\r\n                if (response.data.resultCode === 0) {\r\n                    let {id, email, login} = response.data.data\r\n                    this.props.setAuthUserData(id, email, login, true)\r\n                }\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Header setAuthUserData={this.props.setAuthUserData}\r\n            isAuth={this.props.isAuth}\r\n            login={this.props.login}/>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: RootStateRedux ) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n})\r\n\r\nexport default connect(mapStateToProps, {setAuthUserData})(HeaderContainer)","import React from 'react';\nimport './App.css';\nimport Navbar from './Navbar/Navbar';\nimport News from \"./Profile/News/News\";\nimport Music from \"./Profile/Music/Music\";\nimport Settings from './Profile/Settings/Settings';\nimport {BrowserRouter, Route} from \"react-router-dom\";\nimport DialogsContainer from \"./Profile/Dialogs/DialogsContainer\";\nimport UsersContainer from \"./Users/UsersContainer\";\nimport ProfileContainer from \"./Profile/ProfileContainer\";\nimport HeaderContainer from \"./Header/HeaderContainer\";\n\ntype PropsType = {\n    // state: StateType\n    // dispatch: (action: ActionPropsType) => void\n}\nconst App = (props: PropsType) => {\n\n    return (\n        <BrowserRouter>\n            <div className='app-wrapper'>\n                <HeaderContainer/>\n                <Navbar/>\n                <div className='app-wrapper-content'>\n\n                    <Route path='/dialogs'\n                           render={() => <DialogsContainer/>}/>\n                    <Route path='/profile/:userId?'\n                           render={() => <ProfileContainer/>}/>\n                    <Route path='/users'\n                           render={() => <UsersContainer/>}/>\n                    <Route path='/dialogs' render={() => <News/>}/>\n                    <Route path='/profile' render={() => <Music/>}/>\n                    <Route path='/dialogs' render={() => <Settings/>}/>\n\n                </div>\n            </div>\n        </BrowserRouter>\n    );\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\r\nexport type SidebarStateType = {\r\n\r\n}\r\nlet initialState: SidebarStateType = {}\r\n\r\nconst sidebarReducer = (state: SidebarStateType = initialState, action: any): SidebarStateType => {\r\n\r\n\r\n    return state;\r\n}\r\nexport default sidebarReducer;","import {combineReducers, createStore, Store} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage:  profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer\r\n})\r\n// export type DispatchPropsType1 = typeof store.dispatch\r\nexport type RootStateRedux = ReturnType<typeof reducers>\r\nlet store: Store = createStore(reducers);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from \"./Redux/redux-store\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\n/*\n\nReactDOM.render() {\n    return (\n        <BrowserRouter>\n            <Provider store={store}>\n                <App/>\n            </Provider>\n        </BrowserRouter>, document.getElementById('root')\n    )\n}\n*/\nReactDOM.render( <BrowserRouter>\n    <Provider store={store}>\n        <App/>\n    </Provider>\n</BrowserRouter>, document.getElementById('root'));\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}